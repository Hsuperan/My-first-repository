#include <iostream>
using namespace std;
//构造坐标
class point
{
 public:
    point()
    {
       x=0;
       y=0;
    }
    point(int _x,point _y)
    {
      x=_x;
      y=_y;
    }
    double getx()
    {
      return x;
    }
    double gety()
    {
      return y;
    }
    
private:
    double x;
    double y;
}
//构造直线
class line
{
  public:
    line(point _p1,point _p2)
    {
       p1=_p1;
       p2=_p2;
    }
    //判断两条直线是否平行
    bool isxp(line _l)
    {
    //分别求两条直线的斜率
      double k1=(this->p1.y-this->p2.y)/(this->p1.x-this->p2.x);//this指针指向当前对象
      double k1=(_l->p1.y-_l->p2.y)/(_l->p1.x-_l->p2.x);
      return (k1==k2);//如果斜率相等则平行
    }
  private:
    point p1;
    point p2;
}
int main(int argc, char const *argv[])
{
    point p1(1,2),p2(3,4),p3(5,6),p4(7,8);
    line l1(p1,p2);
    line l1(p3,p4);
    if(l2.isxp(l1))
    {
      cout<<"两条直线是平行的"<<endl;
    }
    else
      cout<<"两条直线不是平行的"<<endl;
    return 0；
}
