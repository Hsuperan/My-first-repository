选择排序：时间复杂度O(n^2) 不稳定
实现方法：首先在未排序的序列中找到最小(大)元素，存放在排序序列的首位
          再从剩余未排序元素中继续选找最小(大)元素，然后放到已排序序
          列的末尾，依次类推
具体实现代码：以整型数组为例

void Selcet_sort(int a[],int len)
{
   int i,j,min,tmp;//min存放最小元素  tmp临时变量
   
   //遍历数组
   for(i=0;i<len-1;i++)
   {
      min=i;
      
      //找出最小元素（如果按降序排序就找出最大元素）
      for(j=0;j<len;j++)
      {
        if(a[min]>a[j])
        {
           min=j;
        }
      }
     
      /*如果这个元素的下标不是第一个元素的下标，就让第一个
       元素跟他交换一下值，这样就找到整个数组中最小的数了*/	
       if(min!=i)
       {
         tmp=a[min];
         a[min]=a[i];
         a[i]=tmp;
       }
   }
}
//测试代码
int main(int argc, char const *argv[])
{
  int array[]={1235,5,123,56};
  int i;
  for(i=0;i<4;i++)
  {
    printf("%d ",array[i]);
  }
  return 0;
}
